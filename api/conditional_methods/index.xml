<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GIRTH – Conditional Methods</title><link>https://eribean.github.io/girth/api/conditional_methods/</link><description>Recent content in Conditional Methods on GIRTH</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 02 Apr 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://eribean.github.io/girth/api/conditional_methods/index.xml" rel="self" type="application/rss+xml"/><item><title>Api: rasch_conditional</title><link>https://eribean.github.io/girth/api/conditional_methods/rasch_conditional/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eribean.github.io/girth/api/conditional_methods/rasch_conditional/</guid><description>
&lt;head>
&lt;link href='https://cdnjs.cloudflare.com/ajax/libs/normalize/8.0.0/normalize.min.css' rel='stylesheet'>
&lt;link href='https://cdnjs.cloudflare.com/ajax/libs/10up-sanitize.css/8.0.0/sanitize.min.css' rel='stylesheet'>
&lt;link href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/styles/github.min.css" rel="stylesheet">
&lt;style>.flex{display:flex !important}body{line-height:1.5em}#content{padding:20px}#sidebar{padding:30px;overflow:hidden}.http-server-breadcrumbs{font-size:130%;margin:0 0 15px 0}#footer{font-size:.75em;padding:5px 30px;border-top:1px solid #ddd;text-align:right}#footer p{margin:0 0 0 1em;display:inline-block}#footer p:last-child{margin-right:30px}h1,h2,h3,h4,h5{font-weight:300}h1{font-size:2.5em;line-height:1.1em}h2{font-size:1.75em;margin:1em 0 .50em 0}h3{font-size:1.4em;margin:25px 0 10px 0}h4{margin:0;font-size:105%}a{color:#058;text-decoration:none;transition:color .3s ease-in-out}a:hover{color:#e82}.title code{font-weight:bold}h2[id^="header-"]{margin-top:2em}.ident{color:#900}pre code{background:#f8f8f8;font-size:.8em;line-height:1.4em}code{background:#f2f2f1;padding:1px 4px;overflow-wrap:break-word}h1 code{background:transparent}pre{background:#f8f8f8;border:0;border-top:1px solid #ccc;border-bottom:1px solid #ccc;margin:1em 0;padding:1ex}#http-server-module-list{display:flex;flex-flow:column}#http-server-module-list div{display:flex}#http-server-module-list dt{min-width:10%}#http-server-module-list p{margin-top:0}.toc ul,#index{list-style-type:none;margin:0;padding:0}#index code{background:transparent}#index h3{border-bottom:1px solid #ddd}#index ul{padding:0}#index h4{font-weight:bold}#index h4 + ul{margin-bottom:.6em}@media (min-width:200ex){#index .two-column{column-count:2}}@media (min-width:300ex){#index .two-column{column-count:3}}dl{margin-bottom:2em}dl dl:last-child{margin-bottom:4em}dd{margin:0 0 1em 3em}#header-classes + dl > dd{margin-bottom:3em}dd dd{margin-left:2em}dd p{margin:10px 0}.name{background:#eee;font-weight:bold;font-size:.85em;padding:5px 10px;display:inline-block;min-width:40%}.name:hover{background:#e0e0e0}.name > span:first-child{white-space:nowrap}.name.class > span:nth-child(2){margin-left:.4em}.inherited{color:#999;border-left:5px solid #eee;padding-left:1em}.inheritance em{font-style:normal;font-weight:bold}.desc h2{font-weight:400;font-size:1.25em}.desc h3{font-size:1em}.desc dt code{background:inherit}.source summary,.git-link-div{color:#666;text-align:right;font-weight:400;font-size:.8em;text-transform:uppercase}.source summary > *{white-space:nowrap;cursor:pointer}.git-link{color:inherit;margin-left:1em}.source pre{max-height:500px;overflow:auto;margin:0}.source pre code{font-size:12px;overflow:visible}.hlist{list-style:none}.hlist li{display:inline}.hlist li:after{content:',2'}.hlist li:last-child:after{content:none}.hlist .hlist{display:inline;padding-left:1em}img{max-width:100%}.admonition{padding:.1em .5em;margin-bottom:1em}.admonition-title{font-weight:bold}.admonition.note,.admonition.info,.admonition.important{background:#aef}.admonition.todo,.admonition.versionadded,.admonition.tip,.admonition.hint{background:#dfd}.admonition.warning,.admonition.versionchanged,.admonition.deprecated{background:#fd4}.admonition.error,.admonition.danger,.admonition.caution{background:lightpink}&lt;/style>
&lt;style>code{color:#000}&lt;/style>
&lt;/head>
&lt;body>
&lt;section >
&lt;dl >
&lt;dt id="girth.conditional_methods.rasch_conditional" >&lt;code class="name flex" >
&lt;span >def &lt;span class="ident" >rasch_conditional&lt;/span>&lt;/span>(&lt;span >dataset, discrimination=1, options=None)&lt;/span>
&lt;/code>&lt;/dt>
&lt;dd >
&lt;section class="desc" >&lt;p >Estimates the difficulty parameters in a Rasch IRT model&lt;/p>
&lt;h2 id="args" >Args&lt;/h2>
&lt;dl >
&lt;dt >&lt;strong >&lt;code >dataset&lt;/code>&lt;/strong>&lt;/dt>
&lt;dd >[items x participants] matrix of True/False Values&lt;/dd>
&lt;dt >&lt;strong >&lt;code >discrimination&lt;/code>&lt;/strong>&lt;/dt>
&lt;dd >scalar of discrimination used in model (default to 1)&lt;/dd>
&lt;dt >&lt;strong >&lt;code >options&lt;/code>&lt;/strong>&lt;/dt>
&lt;dd >dictionary with updates to default options&lt;/dd>
&lt;/dl>
&lt;h2 id="returns" >Returns&lt;/h2>
&lt;dl >
&lt;dt >&lt;strong >&lt;code >difficulty&lt;/code>&lt;/strong>&lt;/dt>
&lt;dd >(1d array) estimates of item difficulties&lt;/dd>
&lt;/dl>
&lt;h2 id="options" >Options&lt;/h2>
&lt;ul >
&lt;li >max_iteration: int&lt;/li>
&lt;/ul>
&lt;h2 id="notes" >Notes&lt;/h2>
&lt;p >This function sets the sum of difficulty parameters to
zero for identification purposes&lt;/p>&lt;/section>
&lt;details class="source" >
&lt;summary >
&lt;span >Expand source code&lt;/span>
&lt;/summary>
&lt;pre >&lt;code class="python" >def rasch_conditional(dataset, discrimination=1, options=None):
&amp;#34;&amp;#34;&amp;#34; Estimates the difficulty parameters in a Rasch IRT model
Args:
dataset: [items x participants] matrix of True/False Values
discrimination: scalar of discrimination used in model (default to 1)
options: dictionary with updates to default options
Returns:
difficulty: (1d array) estimates of item difficulties
Options:
* max_iteration: int
Notes:
This function sets the sum of difficulty parameters to
zero for identification purposes
&amp;#34;&amp;#34;&amp;#34;
options = validate_estimation_options(options)
n_items = dataset.shape[0]
unique_sets, counts = np.unique(dataset, axis=1, return_counts=True)
# Initialize all the difficulty parameters to zeros
# Set an identifying_mean to zero
##TODO: Add option to specifiy position
betas = np.zeros((n_items, ))
identifying_mean = 0.0
# Remove the zero and full count values
unique_sets, counts = trim_response_set_and_counts(unique_sets, counts)
response_set_sums = unique_sets.sum(axis=0)
for iteration in range(options[&amp;#39;max_iteration&amp;#39;]):
previous_betas = betas.copy()
for ndx in range(n_items):
partial_conv = _symmetric_functions(np.delete(betas, ndx))
def min_func(estimate):
betas[ndx] = estimate
full_convolution = np.convolve([1, np.exp(-estimate)], partial_conv)
denominator = full_convolution[response_set_sums]
return (np.sum(unique_sets * betas[:,None], axis=0).dot(counts) +
np.log(denominator).dot(counts))
# Solve for the difficulty parameter
betas[ndx] = fminbound(min_func, -5, 5)
# recenter
betas += (identifying_mean - betas.mean())
# Check termination criterion
if np.abs(betas - previous_betas).max() &amp;lt; 1e-3:
break
return betas / discrimination&lt;/code>&lt;/pre>
&lt;/details>
&lt;/dd>
&lt;/dl>
&lt;/section>
&lt;footer id="footer">
&lt;p>Generated by &lt;a href="https://pdoc3.github.io/pdoc">&lt;cite>pdoc&lt;/cite> 0.7.5&lt;/a>.&lt;/p>
&lt;/footer>
&lt;script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/highlight.min.js">&lt;/script>
&lt;script>hljs.initHighlightingOnLoad()&lt;/script>
&lt;/body></description></item></channel></rss>