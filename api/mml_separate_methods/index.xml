<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GIRTH – Separate Marginal Likelihood Methods</title><link>https://eribean.github.io/girth/api/mml_separate_methods/</link><description>Recent content in Separate Marginal Likelihood Methods on GIRTH</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sat, 04 Apr 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://eribean.github.io/girth/api/mml_separate_methods/index.xml" rel="self" type="application/rss+xml"/><item><title>Api: rasch_separate</title><link>https://eribean.github.io/girth/api/mml_separate_methods/rasch_separate/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eribean.github.io/girth/api/mml_separate_methods/rasch_separate/</guid><description>
&lt;head>
&lt;link href='https://cdnjs.cloudflare.com/ajax/libs/normalize/8.0.0/normalize.min.css' rel='stylesheet'>
&lt;link href='https://cdnjs.cloudflare.com/ajax/libs/10up-sanitize.css/8.0.0/sanitize.min.css' rel='stylesheet'>
&lt;link href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/styles/github.min.css" rel="stylesheet">
&lt;style>.flex{display:flex !important}body{line-height:1.5em}#content{padding:20px}#sidebar{padding:30px;overflow:hidden}.http-server-breadcrumbs{font-size:130%;margin:0 0 15px 0}#footer{font-size:.75em;padding:5px 30px;border-top:1px solid #ddd;text-align:right}#footer p{margin:0 0 0 1em;display:inline-block}#footer p:last-child{margin-right:30px}h1,h2,h3,h4,h5{font-weight:300}h1{font-size:2.5em;line-height:1.1em}h2{font-size:1.75em;margin:1em 0 .50em 0}h3{font-size:1.4em;margin:25px 0 10px 0}h4{margin:0;font-size:105%}a{color:#058;text-decoration:none;transition:color .3s ease-in-out}a:hover{color:#e82}.title code{font-weight:bold}h2[id^="header-"]{margin-top:2em}.ident{color:#900}pre code{background:#f8f8f8;font-size:.8em;line-height:1.4em}code{background:#f2f2f1;padding:1px 4px;overflow-wrap:break-word}h1 code{background:transparent}pre{background:#f8f8f8;border:0;border-top:1px solid #ccc;border-bottom:1px solid #ccc;margin:1em 0;padding:1ex}#http-server-module-list{display:flex;flex-flow:column}#http-server-module-list div{display:flex}#http-server-module-list dt{min-width:10%}#http-server-module-list p{margin-top:0}.toc ul,#index{list-style-type:none;margin:0;padding:0}#index code{background:transparent}#index h3{border-bottom:1px solid #ddd}#index ul{padding:0}#index h4{font-weight:bold}#index h4 + ul{margin-bottom:.6em}@media (min-width:200ex){#index .two-column{column-count:2}}@media (min-width:300ex){#index .two-column{column-count:3}}dl{margin-bottom:2em}dl dl:last-child{margin-bottom:4em}dd{margin:0 0 1em 3em}#header-classes + dl > dd{margin-bottom:3em}dd dd{margin-left:2em}dd p{margin:10px 0}.name{background:#eee;font-weight:bold;font-size:.85em;padding:5px 10px;display:inline-block;min-width:40%}.name:hover{background:#e0e0e0}.name > span:first-child{white-space:nowrap}.name.class > span:nth-child(2){margin-left:.4em}.inherited{color:#999;border-left:5px solid #eee;padding-left:1em}.inheritance em{font-style:normal;font-weight:bold}.desc h2{font-weight:400;font-size:1.25em}.desc h3{font-size:1em}.desc dt code{background:inherit}.source summary,.git-link-div{color:#666;text-align:right;font-weight:400;font-size:.8em;text-transform:uppercase}.source summary > *{white-space:nowrap;cursor:pointer}.git-link{color:inherit;margin-left:1em}.source pre{max-height:500px;overflow:auto;margin:0}.source pre code{font-size:12px;overflow:visible}.hlist{list-style:none}.hlist li{display:inline}.hlist li:after{content:',2'}.hlist li:last-child:after{content:none}.hlist .hlist{display:inline;padding-left:1em}img{max-width:100%}.admonition{padding:.1em .5em;margin-bottom:1em}.admonition-title{font-weight:bold}.admonition.note,.admonition.info,.admonition.important{background:#aef}.admonition.todo,.admonition.versionadded,.admonition.tip,.admonition.hint{background:#dfd}.admonition.warning,.admonition.versionchanged,.admonition.deprecated{background:#fd4}.admonition.error,.admonition.danger,.admonition.caution{background:lightpink}&lt;/style>
&lt;style>code{color:#000}&lt;/style>
&lt;/head>
&lt;body>
&lt;section >
&lt;dl >
&lt;dt id="girth.mml_separate_methods.rasch_separate" >&lt;code class="name flex" >
&lt;span >def &lt;span class="ident" >rasch_separate&lt;/span>&lt;/span>(&lt;span >dataset, discrimination=1)&lt;/span>
&lt;/code>&lt;/dt>
&lt;dd >
&lt;section class="desc" >&lt;p >Estimates parameters in an IRT model with full
gaussian quadrature&lt;/p>
&lt;h2 id="args" >Args&lt;/h2>
&lt;dl >
&lt;dt >&lt;strong >&lt;code >dataset&lt;/code>&lt;/strong>&lt;/dt>
&lt;dd >[items x participants] matrix of True/False Values&lt;/dd>
&lt;dt >&lt;strong >&lt;code >discrimination&lt;/code>&lt;/strong>&lt;/dt>
&lt;dd >scalar of discrimination used in model (default to 1)&lt;/dd>
&lt;/dl>
&lt;h2 id="returns" >Returns&lt;/h2>
&lt;dl >
&lt;dt >&lt;code >array&lt;/code> of &lt;code >discrimination&lt;/code> &lt;code >estimates&lt;/code>&lt;/dt>
&lt;dd >&amp;nbsp;&lt;/dd>
&lt;/dl>&lt;/section>
&lt;details class="source" >
&lt;summary >
&lt;span >Expand source code&lt;/span>
&lt;/summary>
&lt;pre >&lt;code class="python" >def rasch_separate(dataset, discrimination=1):
&amp;#34;&amp;#34;&amp;#34;
Estimates parameters in an IRT model with full
gaussian quadrature
Args:
dataset: [items x participants] matrix of True/False Values
discrimination: scalar of discrimination used in model (default to 1)
Returns:
array of discrimination estimates
&amp;#34;&amp;#34;&amp;#34;
return onepl_separate(dataset, alpha=discrimination)[1]&lt;/code>&lt;/pre>
&lt;/details>
&lt;/dd>
&lt;/dl>
&lt;/section>
&lt;footer id="footer">
&lt;p>Generated by &lt;a href="https://pdoc3.github.io/pdoc">&lt;cite>pdoc&lt;/cite> 0.7.5&lt;/a>.&lt;/p>
&lt;/footer>
&lt;script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/highlight.min.js">&lt;/script>
&lt;script>hljs.initHighlightingOnLoad()&lt;/script>
&lt;/body></description></item><item><title>Api: onepl_separate</title><link>https://eribean.github.io/girth/api/mml_separate_methods/onepl_separate/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eribean.github.io/girth/api/mml_separate_methods/onepl_separate/</guid><description>
&lt;head>
&lt;link href='https://cdnjs.cloudflare.com/ajax/libs/normalize/8.0.0/normalize.min.css' rel='stylesheet'>
&lt;link href='https://cdnjs.cloudflare.com/ajax/libs/10up-sanitize.css/8.0.0/sanitize.min.css' rel='stylesheet'>
&lt;link href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/styles/github.min.css" rel="stylesheet">
&lt;style>.flex{display:flex !important}body{line-height:1.5em}#content{padding:20px}#sidebar{padding:30px;overflow:hidden}.http-server-breadcrumbs{font-size:130%;margin:0 0 15px 0}#footer{font-size:.75em;padding:5px 30px;border-top:1px solid #ddd;text-align:right}#footer p{margin:0 0 0 1em;display:inline-block}#footer p:last-child{margin-right:30px}h1,h2,h3,h4,h5{font-weight:300}h1{font-size:2.5em;line-height:1.1em}h2{font-size:1.75em;margin:1em 0 .50em 0}h3{font-size:1.4em;margin:25px 0 10px 0}h4{margin:0;font-size:105%}a{color:#058;text-decoration:none;transition:color .3s ease-in-out}a:hover{color:#e82}.title code{font-weight:bold}h2[id^="header-"]{margin-top:2em}.ident{color:#900}pre code{background:#f8f8f8;font-size:.8em;line-height:1.4em}code{background:#f2f2f1;padding:1px 4px;overflow-wrap:break-word}h1 code{background:transparent}pre{background:#f8f8f8;border:0;border-top:1px solid #ccc;border-bottom:1px solid #ccc;margin:1em 0;padding:1ex}#http-server-module-list{display:flex;flex-flow:column}#http-server-module-list div{display:flex}#http-server-module-list dt{min-width:10%}#http-server-module-list p{margin-top:0}.toc ul,#index{list-style-type:none;margin:0;padding:0}#index code{background:transparent}#index h3{border-bottom:1px solid #ddd}#index ul{padding:0}#index h4{font-weight:bold}#index h4 + ul{margin-bottom:.6em}@media (min-width:200ex){#index .two-column{column-count:2}}@media (min-width:300ex){#index .two-column{column-count:3}}dl{margin-bottom:2em}dl dl:last-child{margin-bottom:4em}dd{margin:0 0 1em 3em}#header-classes + dl > dd{margin-bottom:3em}dd dd{margin-left:2em}dd p{margin:10px 0}.name{background:#eee;font-weight:bold;font-size:.85em;padding:5px 10px;display:inline-block;min-width:40%}.name:hover{background:#e0e0e0}.name > span:first-child{white-space:nowrap}.name.class > span:nth-child(2){margin-left:.4em}.inherited{color:#999;border-left:5px solid #eee;padding-left:1em}.inheritance em{font-style:normal;font-weight:bold}.desc h2{font-weight:400;font-size:1.25em}.desc h3{font-size:1em}.desc dt code{background:inherit}.source summary,.git-link-div{color:#666;text-align:right;font-weight:400;font-size:.8em;text-transform:uppercase}.source summary > *{white-space:nowrap;cursor:pointer}.git-link{color:inherit;margin-left:1em}.source pre{max-height:500px;overflow:auto;margin:0}.source pre code{font-size:12px;overflow:visible}.hlist{list-style:none}.hlist li{display:inline}.hlist li:after{content:',2'}.hlist li:last-child:after{content:none}.hlist .hlist{display:inline;padding-left:1em}img{max-width:100%}.admonition{padding:.1em .5em;margin-bottom:1em}.admonition-title{font-weight:bold}.admonition.note,.admonition.info,.admonition.important{background:#aef}.admonition.todo,.admonition.versionadded,.admonition.tip,.admonition.hint{background:#dfd}.admonition.warning,.admonition.versionchanged,.admonition.deprecated{background:#fd4}.admonition.error,.admonition.danger,.admonition.caution{background:lightpink}&lt;/style>
&lt;style>code{color:#000}&lt;/style>
&lt;/head>
&lt;body>
&lt;section >
&lt;dl >
&lt;dt id="girth.mml_separate_methods.onepl_separate" >&lt;code class="name flex" >
&lt;span >def &lt;span class="ident" >onepl_separate&lt;/span>&lt;/span>(&lt;span >dataset, alpha=None)&lt;/span>
&lt;/code>&lt;/dt>
&lt;dd >
&lt;section class="desc" >&lt;p >Estimates the difficulty and single discrimination parameter&lt;/p>
&lt;p >Separates the difficulty estimation from the discrimination
parameters&lt;/p>
&lt;h2 id="args" >Args&lt;/h2>
&lt;dl >
&lt;dt >&lt;strong >&lt;code >dataset&lt;/code>&lt;/strong>&lt;/dt>
&lt;dd >[items x participants] matrix of True/False Values&lt;/dd>
&lt;/dl>
&lt;h2 id="returns" >Returns&lt;/h2>
&lt;dl >
&lt;dt >&lt;code >array&lt;/code> of &lt;code >discrimination&lt;/code>, &lt;code >difficulty&lt;/code> &lt;code >estimates&lt;/code>&lt;/dt>
&lt;dd >&amp;nbsp;&lt;/dd>
&lt;/dl>&lt;/section>
&lt;details class="source" >
&lt;summary >
&lt;span >Expand source code&lt;/span>
&lt;/summary>
&lt;pre >&lt;code class="python" >def onepl_separate(dataset, alpha=None):
&amp;#34;&amp;#34;&amp;#34;
Estimates the difficulty and single discrimination parameter
Separates the difficulty estimation from the discrimination
parameters
Args:
dataset: [items x participants] matrix of True/False Values
Returns:
array of discrimination, difficulty estimates
&amp;#34;&amp;#34;&amp;#34;
# Difficulty Estimation parameters
n_items = dataset.shape[0]
n_no, n_yes = get_true_false_counts(dataset)
scalar = n_yes / (n_yes + n_no)
unique_sets, counts = np.unique(dataset, axis=1, return_counts=True)
the_sign = convert_responses_to_kernel_sign(unique_sets)
discrimination = np.ones((n_items,))
difficulty = np.zeros((n_items,))
# Quadrature Locations
theta = _get_quadrature_points(61, -5, 5)
distribution = stats.norm(0, 1).pdf(theta)
# Inline definition of cost function to minimize
def min_func(estimate):
discrimination[:] = estimate
_separate_abstract(difficulty, scalar, discrimination,
theta, distribution)
partial_int = _compute_partial_integral(theta, difficulty,
discrimination, the_sign)
# add distribution
partial_int *= distribution
otpt = integrate.fixed_quad(lambda x: partial_int, -5, 5, n=61)[0]
return -np.log(otpt).dot(counts)
# Perform the minimization
if alpha is None: # OnePL Method
alpha = fminbound(min_func, 0.25, 10)
else: # Rasch Method
min_func(alpha)
return alpha, difficulty&lt;/code>&lt;/pre>
&lt;/details>
&lt;/dd>
&lt;/dl>
&lt;/section>
&lt;footer id="footer">
&lt;p>Generated by &lt;a href="https://pdoc3.github.io/pdoc">&lt;cite>pdoc&lt;/cite> 0.7.5&lt;/a>.&lt;/p>
&lt;/footer>
&lt;script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/highlight.min.js">&lt;/script>
&lt;script>hljs.initHighlightingOnLoad()&lt;/script>
&lt;/body></description></item><item><title>Api: twopl_separate</title><link>https://eribean.github.io/girth/api/mml_separate_methods/twopl_separate/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eribean.github.io/girth/api/mml_separate_methods/twopl_separate/</guid><description>
&lt;head>
&lt;link href='https://cdnjs.cloudflare.com/ajax/libs/normalize/8.0.0/normalize.min.css' rel='stylesheet'>
&lt;link href='https://cdnjs.cloudflare.com/ajax/libs/10up-sanitize.css/8.0.0/sanitize.min.css' rel='stylesheet'>
&lt;link href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/styles/github.min.css" rel="stylesheet">
&lt;style>.flex{display:flex !important}body{line-height:1.5em}#content{padding:20px}#sidebar{padding:30px;overflow:hidden}.http-server-breadcrumbs{font-size:130%;margin:0 0 15px 0}#footer{font-size:.75em;padding:5px 30px;border-top:1px solid #ddd;text-align:right}#footer p{margin:0 0 0 1em;display:inline-block}#footer p:last-child{margin-right:30px}h1,h2,h3,h4,h5{font-weight:300}h1{font-size:2.5em;line-height:1.1em}h2{font-size:1.75em;margin:1em 0 .50em 0}h3{font-size:1.4em;margin:25px 0 10px 0}h4{margin:0;font-size:105%}a{color:#058;text-decoration:none;transition:color .3s ease-in-out}a:hover{color:#e82}.title code{font-weight:bold}h2[id^="header-"]{margin-top:2em}.ident{color:#900}pre code{background:#f8f8f8;font-size:.8em;line-height:1.4em}code{background:#f2f2f1;padding:1px 4px;overflow-wrap:break-word}h1 code{background:transparent}pre{background:#f8f8f8;border:0;border-top:1px solid #ccc;border-bottom:1px solid #ccc;margin:1em 0;padding:1ex}#http-server-module-list{display:flex;flex-flow:column}#http-server-module-list div{display:flex}#http-server-module-list dt{min-width:10%}#http-server-module-list p{margin-top:0}.toc ul,#index{list-style-type:none;margin:0;padding:0}#index code{background:transparent}#index h3{border-bottom:1px solid #ddd}#index ul{padding:0}#index h4{font-weight:bold}#index h4 + ul{margin-bottom:.6em}@media (min-width:200ex){#index .two-column{column-count:2}}@media (min-width:300ex){#index .two-column{column-count:3}}dl{margin-bottom:2em}dl dl:last-child{margin-bottom:4em}dd{margin:0 0 1em 3em}#header-classes + dl > dd{margin-bottom:3em}dd dd{margin-left:2em}dd p{margin:10px 0}.name{background:#eee;font-weight:bold;font-size:.85em;padding:5px 10px;display:inline-block;min-width:40%}.name:hover{background:#e0e0e0}.name > span:first-child{white-space:nowrap}.name.class > span:nth-child(2){margin-left:.4em}.inherited{color:#999;border-left:5px solid #eee;padding-left:1em}.inheritance em{font-style:normal;font-weight:bold}.desc h2{font-weight:400;font-size:1.25em}.desc h3{font-size:1em}.desc dt code{background:inherit}.source summary,.git-link-div{color:#666;text-align:right;font-weight:400;font-size:.8em;text-transform:uppercase}.source summary > *{white-space:nowrap;cursor:pointer}.git-link{color:inherit;margin-left:1em}.source pre{max-height:500px;overflow:auto;margin:0}.source pre code{font-size:12px;overflow:visible}.hlist{list-style:none}.hlist li{display:inline}.hlist li:after{content:',2'}.hlist li:last-child:after{content:none}.hlist .hlist{display:inline;padding-left:1em}img{max-width:100%}.admonition{padding:.1em .5em;margin-bottom:1em}.admonition-title{font-weight:bold}.admonition.note,.admonition.info,.admonition.important{background:#aef}.admonition.todo,.admonition.versionadded,.admonition.tip,.admonition.hint{background:#dfd}.admonition.warning,.admonition.versionchanged,.admonition.deprecated{background:#fd4}.admonition.error,.admonition.danger,.admonition.caution{background:lightpink}&lt;/style>
&lt;style>code{color:#000}&lt;/style>
&lt;/head>
&lt;body>
&lt;section >
&lt;dl >
&lt;dt id="girth.mml_separate_methods.twopl_separate" >&lt;code class="name flex" >
&lt;span >def &lt;span class="ident" >twopl_separate&lt;/span>&lt;/span>(&lt;span >dataset, max_iter=25)&lt;/span>
&lt;/code>&lt;/dt>
&lt;dd >
&lt;section class="desc" >&lt;p >Estimates the difficulty and discrimination parameters&lt;/p>
&lt;p >Separates the difficulty estimation from the discrimination
parameters&lt;/p>
&lt;h2 id="args" >Args&lt;/h2>
&lt;dl >
&lt;dt >&lt;strong >&lt;code >dataset&lt;/code>&lt;/strong>&lt;/dt>
&lt;dd >[items x participants] matrix of True/False Values&lt;/dd>
&lt;dt >&lt;strong >&lt;code >max_iter&lt;/code>&lt;/strong>&lt;/dt>
&lt;dd >maximum number of iterations to run&lt;/dd>
&lt;/dl>
&lt;h2 id="returns" >Returns&lt;/h2>
&lt;dl >
&lt;dt >&lt;code >array&lt;/code> of &lt;code >discrimination&lt;/code>, &lt;code >difficulty&lt;/code> &lt;code >estimates&lt;/code>&lt;/dt>
&lt;dd >&amp;nbsp;&lt;/dd>
&lt;/dl>&lt;/section>
&lt;details class="source" >
&lt;summary >
&lt;span >Expand source code&lt;/span>
&lt;/summary>
&lt;pre >&lt;code class="python" >def twopl_separate(dataset, max_iter=25):
&amp;#34;&amp;#34;&amp;#34;
Estimates the difficulty and discrimination parameters
Separates the difficulty estimation from the discrimination
parameters
Args:
dataset: [items x participants] matrix of True/False Values
max_iter: maximum number of iterations to run
Returns:
array of discrimination, difficulty estimates
&amp;#34;&amp;#34;&amp;#34;
n_items = dataset.shape[0]
n_no, n_yes = get_true_false_counts(dataset)
scalar = n_yes / (n_yes + n_no)
unique_sets, counts = np.unique(dataset, axis=1, return_counts=True)
the_sign = convert_responses_to_kernel_sign(unique_sets)
theta = _get_quadrature_points(61, -5, 5)
distribution = stats.norm(0, 1).pdf(theta)
# Perform the minimization
discrimination = np.ones((n_items,))
difficulty = np.zeros((n_items,))
for iteration in range(max_iter):
previous_discrimination = discrimination.copy()
# Quadrature evaluation for values that do not change
# This is done during the outer loop to address rounding errors
partial_int = _compute_partial_integral(theta, difficulty,
discrimination, the_sign)
partial_int *= distribution
for ndx in range(n_items):
# pylint: disable=cell-var-from-loop
# remove contribution from current item
local_int = _compute_partial_integral(theta, difficulty[ndx, None],
discrimination[ndx, None], the_sign[ndx, None])
partial_int /= local_int
def min_func_local(estimate):
discrimination[ndx] = estimate
_separate_abstract(difficulty[ndx, None], scalar[ndx, None],
discrimination[ndx, None], theta, distribution)
estimate_int = _compute_partial_integral(theta, difficulty[ndx, None],
discrimination[ndx, None],
the_sign[ndx, None])
estimate_int *= partial_int
otpt = integrate.fixed_quad(
lambda x: estimate_int, -5, 5, n=61)[0]
return -np.log(otpt).dot(counts)
# Solve for the discrimination parameters
fminbound(min_func_local, 0.25, 6)
# Update the partial integral based on the new found values
estimate_int = _compute_partial_integral(theta, difficulty[ndx, None],
discrimination[ndx, None],
the_sign[ndx, None])
# update partial integral
partial_int *= estimate_int
if np.abs(discrimination - previous_discrimination).max() &amp;lt; 1e-3:
break
return discrimination, difficulty&lt;/code>&lt;/pre>
&lt;/details>
&lt;/dd>
&lt;/dl>
&lt;/section>
&lt;footer id="footer">
&lt;p>Generated by &lt;a href="https://pdoc3.github.io/pdoc">&lt;cite>pdoc&lt;/cite> 0.7.5&lt;/a>.&lt;/p>
&lt;/footer>
&lt;script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/highlight.min.js">&lt;/script>
&lt;script>hljs.initHighlightingOnLoad()&lt;/script>
&lt;/body></description></item><item><title>Api: grm_separate</title><link>https://eribean.github.io/girth/api/mml_separate_methods/grm_separate/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://eribean.github.io/girth/api/mml_separate_methods/grm_separate/</guid><description>
&lt;head>
&lt;link href='https://cdnjs.cloudflare.com/ajax/libs/normalize/8.0.0/normalize.min.css' rel='stylesheet'>
&lt;link href='https://cdnjs.cloudflare.com/ajax/libs/10up-sanitize.css/8.0.0/sanitize.min.css' rel='stylesheet'>
&lt;link href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/styles/github.min.css" rel="stylesheet">
&lt;style>.flex{display:flex !important}body{line-height:1.5em}#content{padding:20px}#sidebar{padding:30px;overflow:hidden}.http-server-breadcrumbs{font-size:130%;margin:0 0 15px 0}#footer{font-size:.75em;padding:5px 30px;border-top:1px solid #ddd;text-align:right}#footer p{margin:0 0 0 1em;display:inline-block}#footer p:last-child{margin-right:30px}h1,h2,h3,h4,h5{font-weight:300}h1{font-size:2.5em;line-height:1.1em}h2{font-size:1.75em;margin:1em 0 .50em 0}h3{font-size:1.4em;margin:25px 0 10px 0}h4{margin:0;font-size:105%}a{color:#058;text-decoration:none;transition:color .3s ease-in-out}a:hover{color:#e82}.title code{font-weight:bold}h2[id^="header-"]{margin-top:2em}.ident{color:#900}pre code{background:#f8f8f8;font-size:.8em;line-height:1.4em}code{background:#f2f2f1;padding:1px 4px;overflow-wrap:break-word}h1 code{background:transparent}pre{background:#f8f8f8;border:0;border-top:1px solid #ccc;border-bottom:1px solid #ccc;margin:1em 0;padding:1ex}#http-server-module-list{display:flex;flex-flow:column}#http-server-module-list div{display:flex}#http-server-module-list dt{min-width:10%}#http-server-module-list p{margin-top:0}.toc ul,#index{list-style-type:none;margin:0;padding:0}#index code{background:transparent}#index h3{border-bottom:1px solid #ddd}#index ul{padding:0}#index h4{font-weight:bold}#index h4 + ul{margin-bottom:.6em}@media (min-width:200ex){#index .two-column{column-count:2}}@media (min-width:300ex){#index .two-column{column-count:3}}dl{margin-bottom:2em}dl dl:last-child{margin-bottom:4em}dd{margin:0 0 1em 3em}#header-classes + dl > dd{margin-bottom:3em}dd dd{margin-left:2em}dd p{margin:10px 0}.name{background:#eee;font-weight:bold;font-size:.85em;padding:5px 10px;display:inline-block;min-width:40%}.name:hover{background:#e0e0e0}.name > span:first-child{white-space:nowrap}.name.class > span:nth-child(2){margin-left:.4em}.inherited{color:#999;border-left:5px solid #eee;padding-left:1em}.inheritance em{font-style:normal;font-weight:bold}.desc h2{font-weight:400;font-size:1.25em}.desc h3{font-size:1em}.desc dt code{background:inherit}.source summary,.git-link-div{color:#666;text-align:right;font-weight:400;font-size:.8em;text-transform:uppercase}.source summary > *{white-space:nowrap;cursor:pointer}.git-link{color:inherit;margin-left:1em}.source pre{max-height:500px;overflow:auto;margin:0}.source pre code{font-size:12px;overflow:visible}.hlist{list-style:none}.hlist li{display:inline}.hlist li:after{content:',2'}.hlist li:last-child:after{content:none}.hlist .hlist{display:inline;padding-left:1em}img{max-width:100%}.admonition{padding:.1em .5em;margin-bottom:1em}.admonition-title{font-weight:bold}.admonition.note,.admonition.info,.admonition.important{background:#aef}.admonition.todo,.admonition.versionadded,.admonition.tip,.admonition.hint{background:#dfd}.admonition.warning,.admonition.versionchanged,.admonition.deprecated{background:#fd4}.admonition.error,.admonition.danger,.admonition.caution{background:lightpink}&lt;/style>
&lt;style>code{color:#000}&lt;/style>
&lt;/head>
&lt;body>
&lt;section >
&lt;dl >
&lt;dt id="girth.mml_separate_methods.grm_separate" >&lt;code class="name flex" >
&lt;span >def &lt;span class="ident" >grm_separate&lt;/span>&lt;/span>(&lt;span >dataset, max_iter=25)&lt;/span>
&lt;/code>&lt;/dt>
&lt;dd >
&lt;section class="desc" >&lt;p >Estimate parameters for graded response model.&lt;/p>
&lt;p >Estimate the discrimination and difficulty parameters for
a graded response model using marginal maximum likelihood.&lt;/p>
&lt;h2 id="args" >Args&lt;/h2>
&lt;dl >
&lt;dt >&lt;strong >&lt;code >dataset&lt;/code>&lt;/strong>&lt;/dt>
&lt;dd >[n_items, n_participants] 2d array of measured responses&lt;/dd>
&lt;dt >&lt;strong >&lt;code >max_iter&lt;/code>&lt;/strong>&lt;/dt>
&lt;dd >(optional) maximum number of iterations to perform&lt;/dd>
&lt;/dl>
&lt;h2 id="returns" >Returns&lt;/h2>
&lt;dl >
&lt;dt >&lt;code >array&lt;/code> of &lt;code >discrimination&lt;/code> &lt;code >parameters&lt;/code>&lt;/dt>
&lt;dd >&amp;nbsp;&lt;/dd>
&lt;dt >&lt;code >2d&lt;/code> &lt;code >array&lt;/code> of &lt;code >difficulty&lt;/code> &lt;code >parameters&lt;/code>, (&lt;code >NAN&lt;/code> &lt;code >represents&lt;/code> &lt;code >non&lt;/code> &lt;code >response&lt;/code>)&lt;/dt>
&lt;dd >&amp;nbsp;&lt;/dd>
&lt;/dl>&lt;/section>
&lt;details class="source" >
&lt;summary >
&lt;span >Expand source code&lt;/span>
&lt;/summary>
&lt;pre >&lt;code class="python" >def grm_separate(dataset, max_iter=25):
&amp;#34;&amp;#34;&amp;#34;Estimate parameters for graded response model.
Estimate the discrimination and difficulty parameters for
a graded response model using marginal maximum likelihood.
Args:
dataset: [n_items, n_participants] 2d array of measured responses
max_iter: (optional) maximum number of iterations to perform
Returns:
array of discrimination parameters
2d array of difficulty parameters, (NAN represents non response)
&amp;#34;&amp;#34;&amp;#34;
responses, item_counts = condition_polytomous_response(
dataset, trim_ends=False)
n_items = responses.shape[0]
# Interpolation Locations
theta = _get_quadrature_points(61, -5, 5)
distribution = np.exp(-np.square(theta) / 2) / np.sqrt(2 * np.pi)
ones_distribution = np.ones_like(distribution)
# Compute the values needed for integral equations
integral_counts = list()
for ndx in range(n_items):
temp_output = _solve_for_constants(responses[ndx])
integral_counts.append(temp_output)
# Initialize difficulty parameters for estimation
betas = np.full((item_counts.sum(),), -10000.0)
discrimination = np.ones_like(betas)
cumulative_item_counts = item_counts.cumsum()
start_indices = np.roll(cumulative_item_counts, 1)
start_indices[0] = 0
for ndx in range(n_items):
end_ndx = cumulative_item_counts[ndx]
start_ndx = start_indices[ndx] + 1
betas[start_ndx:end_ndx] = np.linspace(-1, 1,
item_counts[ndx] - 1)
betas_roll = np.roll(betas, -1)
betas_roll[cumulative_item_counts-1] = 10000
#############
# 1. Start the iteration loop
# 2. estimate discrimination
# 3. solve for difficulties
# 4. minimize and repeat
#############
for iteration in range(max_iter):
previous_discrimination = discrimination.copy()
previous_betas = betas.copy()
previous_betas_roll = betas_roll.copy()
# Quadrature evaluation for values that do not change
# This is done during the outer loop to address rounding errors
partial_int = _graded_partial_integral(theta, betas, betas_roll,
discrimination, responses,
distribution)
for item_ndx in range(n_items):
# pylint: disable=cell-var-from-loop
# Indices into linearized difficulty parameters
start_ndx = start_indices[item_ndx]
end_ndx = cumulative_item_counts[item_ndx]
old_values = _graded_partial_integral(theta, previous_betas,
previous_betas_roll,
previous_discrimination,
responses[item_ndx][None, :],
ones_distribution)
partial_int /= old_values
def _local_min_func(estimate):
# Solve integrals for diffiulty estimates
new_betas = _solve_integral_equations(estimate,
integral_counts[item_ndx],
distribution,
theta)
betas[start_ndx+1:end_ndx] = new_betas
betas_roll[start_ndx:end_ndx-1] = new_betas
discrimination[start_ndx:end_ndx] = estimate
new_values = _graded_partial_integral(theta, betas, betas_roll,
discrimination,
responses[item_ndx][None, :],
ones_distribution)
new_values *= partial_int
otpt = integrate.fixed_quad(
lambda x: new_values, -5, 5, n=61)[0]
return -np.log(otpt).sum()
# Univariate minimization for discrimination parameter
fminbound(_local_min_func, 0.2, 5.0)
new_values = _graded_partial_integral(theta, betas, betas_roll,
discrimination,
responses[item_ndx][None, :],
ones_distribution)
partial_int *= new_values
if np.abs(previous_discrimination - discrimination).max() &amp;lt; 1e-3:
break
# Trim difficulties to conform to standard output
# TODO: look where missing values are and place NAN there instead
# of appending them to the end
output_betas = np.full((n_items, item_counts.max()-1), np.nan)
for ndx, (start_ndx, end_ndx) in enumerate(zip(start_indices, cumulative_item_counts)):
output_betas[ndx, :end_ndx-start_ndx-1] = betas[start_ndx+1:end_ndx]
return discrimination[start_indices], output_betas&lt;/code>&lt;/pre>
&lt;/details>
&lt;/dd>
&lt;/dl>
&lt;/section>
&lt;footer id="footer">
&lt;p>Generated by &lt;a href="https://pdoc3.github.io/pdoc">&lt;cite>pdoc&lt;/cite> 0.7.5&lt;/a>.&lt;/p>
&lt;/footer>
&lt;script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/highlight.min.js">&lt;/script>
&lt;script>hljs.initHighlightingOnLoad()&lt;/script>
&lt;/body></description></item></channel></rss>